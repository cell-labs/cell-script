// Code generated from CellScriptLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package lexer

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type CellScriptLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var CellScriptLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func cellscriptlexerLexerInit() {
	staticData := &CellScriptLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'function'", "'package'", "'if'", "'else'", "'for'", "'continue'",
		"'break'", "'import'", "'return'", "'vector'", "'table'", "'union'",
		"'var'", "'{'", "'}'", "'('", "')'", "','", "", "", "'int'", "'bool'",
		"'+'", "'-'", "'*'", "'/'", "'%'", "'='",
	}
	staticData.SymbolicNames = []string{
		"", "FUNC", "PACKAGE", "IF", "ELSE", "FOR", "CONTINUE", "BREAK", "IMPORT",
		"RETURN", "VECTOR", "TABLE", "UNION", "VAR", "L_CURLY", "R_CURLY", "L_BRACKET",
		"R_BRACKET", "COMMA", "IDENTIFIER", "TYPE", "TYPE_INT", "TYPE_BOOL",
		"ADD", "SUB", "MUL", "DIV", "MOD", "ASSIGN", "LITERAL", "NUMBER", "STRING_LIT",
		"BOOL_LIT", "RAW_STRING_LIT", "INTERPRETED_STRING_LIT", "WS", "COMMENT",
		"TERMINATOR", "LINE_COMMENT", "WS_DEFAULT", "COMMENT_DEFAULT", "LINE_COMMENT_DEFAULT",
		"EOS",
	}
	staticData.RuleNames = []string{
		"FUNC", "PACKAGE", "IF", "ELSE", "FOR", "CONTINUE", "BREAK", "IMPORT",
		"RETURN", "VECTOR", "TABLE", "UNION", "VAR", "L_CURLY", "R_CURLY", "L_BRACKET",
		"R_BRACKET", "COMMA", "IDENTIFIER", "TYPE", "TYPE_INT", "TYPE_BOOL",
		"ADD", "SUB", "MUL", "DIV", "MOD", "ASSIGN", "LITERAL", "NUMBER", "STRING_LIT",
		"BOOL_LIT", "RAW_STRING_LIT", "INTERPRETED_STRING_LIT", "WS", "COMMENT",
		"TERMINATOR", "LINE_COMMENT", "ESCAPED_VALUE", "DECIMALS", "OCTAL_DIGIT",
		"HEX_DIGIT", "BIN_DIGIT", "LETTER", "WS_DEFAULT", "COMMENT_DEFAULT",
		"LINE_COMMENT_DEFAULT", "EOS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 42, 402, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 3, 1,
		3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1,
		5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1,
		7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1,
		8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17,
		1, 17, 1, 18, 1, 18, 5, 18, 191, 8, 18, 10, 18, 12, 18, 194, 9, 18, 1,
		19, 1, 19, 3, 19, 198, 8, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21,
		1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1,
		25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 3, 28, 224, 8, 28,
		1, 29, 4, 29, 227, 8, 29, 11, 29, 12, 29, 228, 1, 30, 1, 30, 1, 30, 1,
		30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 3, 31,
		244, 8, 31, 1, 32, 1, 32, 5, 32, 248, 8, 32, 10, 32, 12, 32, 251, 9, 32,
		1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 5, 33, 258, 8, 33, 10, 33, 12, 33, 261,
		9, 33, 1, 33, 1, 33, 1, 34, 4, 34, 266, 8, 34, 11, 34, 12, 34, 267, 1,
		34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 5, 35, 276, 8, 35, 10, 35, 12, 35,
		279, 9, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 4, 36, 287, 8, 36,
		11, 36, 12, 36, 288, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 5, 37, 297,
		8, 37, 10, 37, 12, 37, 300, 9, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1,
		38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38,
		1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1,
		38, 1, 38, 3, 38, 330, 8, 38, 1, 39, 1, 39, 3, 39, 334, 8, 39, 1, 39, 5,
		39, 337, 8, 39, 10, 39, 12, 39, 340, 9, 39, 1, 40, 1, 40, 1, 41, 1, 41,
		1, 42, 1, 42, 1, 43, 3, 43, 349, 8, 43, 1, 44, 4, 44, 352, 8, 44, 11, 44,
		12, 44, 353, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 5, 45, 362, 8, 45,
		10, 45, 12, 45, 365, 9, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 46, 1,
		46, 1, 46, 1, 46, 5, 46, 376, 8, 46, 10, 46, 12, 46, 379, 9, 46, 1, 46,
		1, 46, 1, 47, 4, 47, 384, 8, 47, 11, 47, 12, 47, 385, 1, 47, 1, 47, 1,
		47, 1, 47, 1, 47, 5, 47, 393, 8, 47, 10, 47, 12, 47, 396, 9, 47, 1, 47,
		1, 47, 1, 47, 3, 47, 401, 8, 47, 3, 277, 363, 394, 0, 48, 1, 1, 3, 2, 5,
		3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
		22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61,
		31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 0, 79,
		0, 81, 0, 83, 0, 85, 0, 87, 0, 89, 39, 91, 40, 93, 41, 95, 42, 1, 0, 11,
		3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 1,
		0, 48, 57, 1, 0, 96, 96, 2, 0, 34, 34, 92, 92, 2, 0, 9, 9, 32, 32, 2, 0,
		10, 10, 13, 13, 9, 0, 34, 34, 39, 39, 92, 92, 97, 98, 102, 102, 110, 110,
		114, 114, 116, 116, 118, 118, 1, 0, 48, 55, 3, 0, 48, 57, 65, 70, 97, 102,
		1, 0, 48, 49, 422, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0,
		0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0,
		0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0,
		0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1,
		0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37,
		1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0,
		45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0,
		0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0,
		0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0,
		0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1,
		0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95,
		1, 0, 0, 0, 1, 97, 1, 0, 0, 0, 3, 106, 1, 0, 0, 0, 5, 114, 1, 0, 0, 0,
		7, 117, 1, 0, 0, 0, 9, 122, 1, 0, 0, 0, 11, 126, 1, 0, 0, 0, 13, 135, 1,
		0, 0, 0, 15, 141, 1, 0, 0, 0, 17, 148, 1, 0, 0, 0, 19, 155, 1, 0, 0, 0,
		21, 162, 1, 0, 0, 0, 23, 168, 1, 0, 0, 0, 25, 174, 1, 0, 0, 0, 27, 178,
		1, 0, 0, 0, 29, 180, 1, 0, 0, 0, 31, 182, 1, 0, 0, 0, 33, 184, 1, 0, 0,
		0, 35, 186, 1, 0, 0, 0, 37, 188, 1, 0, 0, 0, 39, 197, 1, 0, 0, 0, 41, 199,
		1, 0, 0, 0, 43, 203, 1, 0, 0, 0, 45, 208, 1, 0, 0, 0, 47, 210, 1, 0, 0,
		0, 49, 212, 1, 0, 0, 0, 51, 214, 1, 0, 0, 0, 53, 216, 1, 0, 0, 0, 55, 218,
		1, 0, 0, 0, 57, 223, 1, 0, 0, 0, 59, 226, 1, 0, 0, 0, 61, 230, 1, 0, 0,
		0, 63, 243, 1, 0, 0, 0, 65, 245, 1, 0, 0, 0, 67, 254, 1, 0, 0, 0, 69, 265,
		1, 0, 0, 0, 71, 271, 1, 0, 0, 0, 73, 286, 1, 0, 0, 0, 75, 292, 1, 0, 0,
		0, 77, 303, 1, 0, 0, 0, 79, 331, 1, 0, 0, 0, 81, 341, 1, 0, 0, 0, 83, 343,
		1, 0, 0, 0, 85, 345, 1, 0, 0, 0, 87, 348, 1, 0, 0, 0, 89, 351, 1, 0, 0,
		0, 91, 357, 1, 0, 0, 0, 93, 371, 1, 0, 0, 0, 95, 400, 1, 0, 0, 0, 97, 98,
		5, 102, 0, 0, 98, 99, 5, 117, 0, 0, 99, 100, 5, 110, 0, 0, 100, 101, 5,
		99, 0, 0, 101, 102, 5, 116, 0, 0, 102, 103, 5, 105, 0, 0, 103, 104, 5,
		111, 0, 0, 104, 105, 5, 110, 0, 0, 105, 2, 1, 0, 0, 0, 106, 107, 5, 112,
		0, 0, 107, 108, 5, 97, 0, 0, 108, 109, 5, 99, 0, 0, 109, 110, 5, 107, 0,
		0, 110, 111, 5, 97, 0, 0, 111, 112, 5, 103, 0, 0, 112, 113, 5, 101, 0,
		0, 113, 4, 1, 0, 0, 0, 114, 115, 5, 105, 0, 0, 115, 116, 5, 102, 0, 0,
		116, 6, 1, 0, 0, 0, 117, 118, 5, 101, 0, 0, 118, 119, 5, 108, 0, 0, 119,
		120, 5, 115, 0, 0, 120, 121, 5, 101, 0, 0, 121, 8, 1, 0, 0, 0, 122, 123,
		5, 102, 0, 0, 123, 124, 5, 111, 0, 0, 124, 125, 5, 114, 0, 0, 125, 10,
		1, 0, 0, 0, 126, 127, 5, 99, 0, 0, 127, 128, 5, 111, 0, 0, 128, 129, 5,
		110, 0, 0, 129, 130, 5, 116, 0, 0, 130, 131, 5, 105, 0, 0, 131, 132, 5,
		110, 0, 0, 132, 133, 5, 117, 0, 0, 133, 134, 5, 101, 0, 0, 134, 12, 1,
		0, 0, 0, 135, 136, 5, 98, 0, 0, 136, 137, 5, 114, 0, 0, 137, 138, 5, 101,
		0, 0, 138, 139, 5, 97, 0, 0, 139, 140, 5, 107, 0, 0, 140, 14, 1, 0, 0,
		0, 141, 142, 5, 105, 0, 0, 142, 143, 5, 109, 0, 0, 143, 144, 5, 112, 0,
		0, 144, 145, 5, 111, 0, 0, 145, 146, 5, 114, 0, 0, 146, 147, 5, 116, 0,
		0, 147, 16, 1, 0, 0, 0, 148, 149, 5, 114, 0, 0, 149, 150, 5, 101, 0, 0,
		150, 151, 5, 116, 0, 0, 151, 152, 5, 117, 0, 0, 152, 153, 5, 114, 0, 0,
		153, 154, 5, 110, 0, 0, 154, 18, 1, 0, 0, 0, 155, 156, 5, 118, 0, 0, 156,
		157, 5, 101, 0, 0, 157, 158, 5, 99, 0, 0, 158, 159, 5, 116, 0, 0, 159,
		160, 5, 111, 0, 0, 160, 161, 5, 114, 0, 0, 161, 20, 1, 0, 0, 0, 162, 163,
		5, 116, 0, 0, 163, 164, 5, 97, 0, 0, 164, 165, 5, 98, 0, 0, 165, 166, 5,
		108, 0, 0, 166, 167, 5, 101, 0, 0, 167, 22, 1, 0, 0, 0, 168, 169, 5, 117,
		0, 0, 169, 170, 5, 110, 0, 0, 170, 171, 5, 105, 0, 0, 171, 172, 5, 111,
		0, 0, 172, 173, 5, 110, 0, 0, 173, 24, 1, 0, 0, 0, 174, 175, 5, 118, 0,
		0, 175, 176, 5, 97, 0, 0, 176, 177, 5, 114, 0, 0, 177, 26, 1, 0, 0, 0,
		178, 179, 5, 123, 0, 0, 179, 28, 1, 0, 0, 0, 180, 181, 5, 125, 0, 0, 181,
		30, 1, 0, 0, 0, 182, 183, 5, 40, 0, 0, 183, 32, 1, 0, 0, 0, 184, 185, 5,
		41, 0, 0, 185, 34, 1, 0, 0, 0, 186, 187, 5, 44, 0, 0, 187, 36, 1, 0, 0,
		0, 188, 192, 7, 0, 0, 0, 189, 191, 7, 1, 0, 0, 190, 189, 1, 0, 0, 0, 191,
		194, 1, 0, 0, 0, 192, 190, 1, 0, 0, 0, 192, 193, 1, 0, 0, 0, 193, 38, 1,
		0, 0, 0, 194, 192, 1, 0, 0, 0, 195, 198, 3, 41, 20, 0, 196, 198, 3, 43,
		21, 0, 197, 195, 1, 0, 0, 0, 197, 196, 1, 0, 0, 0, 198, 40, 1, 0, 0, 0,
		199, 200, 5, 105, 0, 0, 200, 201, 5, 110, 0, 0, 201, 202, 5, 116, 0, 0,
		202, 42, 1, 0, 0, 0, 203, 204, 5, 98, 0, 0, 204, 205, 5, 111, 0, 0, 205,
		206, 5, 111, 0, 0, 206, 207, 5, 108, 0, 0, 207, 44, 1, 0, 0, 0, 208, 209,
		5, 43, 0, 0, 209, 46, 1, 0, 0, 0, 210, 211, 5, 45, 0, 0, 211, 48, 1, 0,
		0, 0, 212, 213, 5, 42, 0, 0, 213, 50, 1, 0, 0, 0, 214, 215, 5, 47, 0, 0,
		215, 52, 1, 0, 0, 0, 216, 217, 5, 37, 0, 0, 217, 54, 1, 0, 0, 0, 218, 219,
		5, 61, 0, 0, 219, 56, 1, 0, 0, 0, 220, 224, 3, 61, 30, 0, 221, 224, 3,
		63, 31, 0, 222, 224, 3, 59, 29, 0, 223, 220, 1, 0, 0, 0, 223, 221, 1, 0,
		0, 0, 223, 222, 1, 0, 0, 0, 224, 58, 1, 0, 0, 0, 225, 227, 7, 2, 0, 0,
		226, 225, 1, 0, 0, 0, 227, 228, 1, 0, 0, 0, 228, 226, 1, 0, 0, 0, 228,
		229, 1, 0, 0, 0, 229, 60, 1, 0, 0, 0, 230, 231, 5, 34, 0, 0, 231, 232,
		3, 37, 18, 0, 232, 233, 5, 34, 0, 0, 233, 62, 1, 0, 0, 0, 234, 235, 5,
		116, 0, 0, 235, 236, 5, 114, 0, 0, 236, 237, 5, 117, 0, 0, 237, 244, 5,
		101, 0, 0, 238, 239, 5, 102, 0, 0, 239, 240, 5, 97, 0, 0, 240, 241, 5,
		108, 0, 0, 241, 242, 5, 115, 0, 0, 242, 244, 5, 101, 0, 0, 243, 234, 1,
		0, 0, 0, 243, 238, 1, 0, 0, 0, 244, 64, 1, 0, 0, 0, 245, 249, 5, 96, 0,
		0, 246, 248, 8, 3, 0, 0, 247, 246, 1, 0, 0, 0, 248, 251, 1, 0, 0, 0, 249,
		247, 1, 0, 0, 0, 249, 250, 1, 0, 0, 0, 250, 252, 1, 0, 0, 0, 251, 249,
		1, 0, 0, 0, 252, 253, 5, 96, 0, 0, 253, 66, 1, 0, 0, 0, 254, 259, 5, 34,
		0, 0, 255, 258, 8, 4, 0, 0, 256, 258, 3, 77, 38, 0, 257, 255, 1, 0, 0,
		0, 257, 256, 1, 0, 0, 0, 258, 261, 1, 0, 0, 0, 259, 257, 1, 0, 0, 0, 259,
		260, 1, 0, 0, 0, 260, 262, 1, 0, 0, 0, 261, 259, 1, 0, 0, 0, 262, 263,
		5, 34, 0, 0, 263, 68, 1, 0, 0, 0, 264, 266, 7, 5, 0, 0, 265, 264, 1, 0,
		0, 0, 266, 267, 1, 0, 0, 0, 267, 265, 1, 0, 0, 0, 267, 268, 1, 0, 0, 0,
		268, 269, 1, 0, 0, 0, 269, 270, 6, 34, 0, 0, 270, 70, 1, 0, 0, 0, 271,
		272, 5, 47, 0, 0, 272, 273, 5, 42, 0, 0, 273, 277, 1, 0, 0, 0, 274, 276,
		9, 0, 0, 0, 275, 274, 1, 0, 0, 0, 276, 279, 1, 0, 0, 0, 277, 278, 1, 0,
		0, 0, 277, 275, 1, 0, 0, 0, 278, 280, 1, 0, 0, 0, 279, 277, 1, 0, 0, 0,
		280, 281, 5, 42, 0, 0, 281, 282, 5, 47, 0, 0, 282, 283, 1, 0, 0, 0, 283,
		284, 6, 35, 0, 0, 284, 72, 1, 0, 0, 0, 285, 287, 7, 6, 0, 0, 286, 285,
		1, 0, 0, 0, 287, 288, 1, 0, 0, 0, 288, 286, 1, 0, 0, 0, 288, 289, 1, 0,
		0, 0, 289, 290, 1, 0, 0, 0, 290, 291, 6, 36, 0, 0, 291, 74, 1, 0, 0, 0,
		292, 293, 5, 47, 0, 0, 293, 294, 5, 47, 0, 0, 294, 298, 1, 0, 0, 0, 295,
		297, 8, 6, 0, 0, 296, 295, 1, 0, 0, 0, 297, 300, 1, 0, 0, 0, 298, 296,
		1, 0, 0, 0, 298, 299, 1, 0, 0, 0, 299, 301, 1, 0, 0, 0, 300, 298, 1, 0,
		0, 0, 301, 302, 6, 37, 0, 0, 302, 76, 1, 0, 0, 0, 303, 329, 5, 92, 0, 0,
		304, 305, 5, 117, 0, 0, 305, 306, 3, 83, 41, 0, 306, 307, 3, 83, 41, 0,
		307, 308, 3, 83, 41, 0, 308, 309, 3, 83, 41, 0, 309, 330, 1, 0, 0, 0, 310,
		311, 5, 85, 0, 0, 311, 312, 3, 83, 41, 0, 312, 313, 3, 83, 41, 0, 313,
		314, 3, 83, 41, 0, 314, 315, 3, 83, 41, 0, 315, 316, 3, 83, 41, 0, 316,
		317, 3, 83, 41, 0, 317, 318, 3, 83, 41, 0, 318, 319, 3, 83, 41, 0, 319,
		330, 1, 0, 0, 0, 320, 330, 7, 7, 0, 0, 321, 322, 3, 81, 40, 0, 322, 323,
		3, 81, 40, 0, 323, 324, 3, 81, 40, 0, 324, 330, 1, 0, 0, 0, 325, 326, 5,
		120, 0, 0, 326, 327, 3, 83, 41, 0, 327, 328, 3, 83, 41, 0, 328, 330, 1,
		0, 0, 0, 329, 304, 1, 0, 0, 0, 329, 310, 1, 0, 0, 0, 329, 320, 1, 0, 0,
		0, 329, 321, 1, 0, 0, 0, 329, 325, 1, 0, 0, 0, 330, 78, 1, 0, 0, 0, 331,
		338, 7, 2, 0, 0, 332, 334, 5, 95, 0, 0, 333, 332, 1, 0, 0, 0, 333, 334,
		1, 0, 0, 0, 334, 335, 1, 0, 0, 0, 335, 337, 7, 2, 0, 0, 336, 333, 1, 0,
		0, 0, 337, 340, 1, 0, 0, 0, 338, 336, 1, 0, 0, 0, 338, 339, 1, 0, 0, 0,
		339, 80, 1, 0, 0, 0, 340, 338, 1, 0, 0, 0, 341, 342, 7, 8, 0, 0, 342, 82,
		1, 0, 0, 0, 343, 344, 7, 9, 0, 0, 344, 84, 1, 0, 0, 0, 345, 346, 7, 10,
		0, 0, 346, 86, 1, 0, 0, 0, 347, 349, 7, 0, 0, 0, 348, 347, 1, 0, 0, 0,
		349, 88, 1, 0, 0, 0, 350, 352, 7, 5, 0, 0, 351, 350, 1, 0, 0, 0, 352, 353,
		1, 0, 0, 0, 353, 351, 1, 0, 0, 0, 353, 354, 1, 0, 0, 0, 354, 355, 1, 0,
		0, 0, 355, 356, 6, 44, 0, 0, 356, 90, 1, 0, 0, 0, 357, 358, 5, 47, 0, 0,
		358, 359, 5, 42, 0, 0, 359, 363, 1, 0, 0, 0, 360, 362, 8, 6, 0, 0, 361,
		360, 1, 0, 0, 0, 362, 365, 1, 0, 0, 0, 363, 364, 1, 0, 0, 0, 363, 361,
		1, 0, 0, 0, 364, 366, 1, 0, 0, 0, 365, 363, 1, 0, 0, 0, 366, 367, 5, 42,
		0, 0, 367, 368, 5, 47, 0, 0, 368, 369, 1, 0, 0, 0, 369, 370, 6, 45, 0,
		0, 370, 92, 1, 0, 0, 0, 371, 372, 5, 47, 0, 0, 372, 373, 5, 47, 0, 0, 373,
		377, 1, 0, 0, 0, 374, 376, 8, 6, 0, 0, 375, 374, 1, 0, 0, 0, 376, 379,
		1, 0, 0, 0, 377, 375, 1, 0, 0, 0, 377, 378, 1, 0, 0, 0, 378, 380, 1, 0,
		0, 0, 379, 377, 1, 0, 0, 0, 380, 381, 6, 46, 0, 0, 381, 94, 1, 0, 0, 0,
		382, 384, 7, 6, 0, 0, 383, 382, 1, 0, 0, 0, 384, 385, 1, 0, 0, 0, 385,
		383, 1, 0, 0, 0, 385, 386, 1, 0, 0, 0, 386, 401, 1, 0, 0, 0, 387, 401,
		5, 59, 0, 0, 388, 389, 5, 47, 0, 0, 389, 390, 5, 42, 0, 0, 390, 394, 1,
		0, 0, 0, 391, 393, 9, 0, 0, 0, 392, 391, 1, 0, 0, 0, 393, 396, 1, 0, 0,
		0, 394, 395, 1, 0, 0, 0, 394, 392, 1, 0, 0, 0, 395, 397, 1, 0, 0, 0, 396,
		394, 1, 0, 0, 0, 397, 398, 5, 42, 0, 0, 398, 401, 5, 47, 0, 0, 399, 401,
		5, 0, 0, 1, 400, 383, 1, 0, 0, 0, 400, 387, 1, 0, 0, 0, 400, 388, 1, 0,
		0, 0, 400, 399, 1, 0, 0, 0, 401, 96, 1, 0, 0, 0, 23, 0, 192, 197, 223,
		228, 243, 249, 257, 259, 267, 277, 288, 298, 329, 333, 338, 348, 353, 363,
		377, 385, 394, 400, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// CellScriptLexerInit initializes any static state used to implement CellScriptLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewCellScriptLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func CellScriptLexerInit() {
	staticData := &CellScriptLexerLexerStaticData
	staticData.once.Do(cellscriptlexerLexerInit)
}

// NewCellScriptLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewCellScriptLexer(input antlr.CharStream) *CellScriptLexer {
	CellScriptLexerInit()
	l := new(CellScriptLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &CellScriptLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "CellScriptLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// CellScriptLexer tokens.
const (
	CellScriptLexerFUNC                   = 1
	CellScriptLexerPACKAGE                = 2
	CellScriptLexerIF                     = 3
	CellScriptLexerELSE                   = 4
	CellScriptLexerFOR                    = 5
	CellScriptLexerCONTINUE               = 6
	CellScriptLexerBREAK                  = 7
	CellScriptLexerIMPORT                 = 8
	CellScriptLexerRETURN                 = 9
	CellScriptLexerVECTOR                 = 10
	CellScriptLexerTABLE                  = 11
	CellScriptLexerUNION                  = 12
	CellScriptLexerVAR                    = 13
	CellScriptLexerL_CURLY                = 14
	CellScriptLexerR_CURLY                = 15
	CellScriptLexerL_BRACKET              = 16
	CellScriptLexerR_BRACKET              = 17
	CellScriptLexerCOMMA                  = 18
	CellScriptLexerIDENTIFIER             = 19
	CellScriptLexerTYPE                   = 20
	CellScriptLexerTYPE_INT               = 21
	CellScriptLexerTYPE_BOOL              = 22
	CellScriptLexerADD                    = 23
	CellScriptLexerSUB                    = 24
	CellScriptLexerMUL                    = 25
	CellScriptLexerDIV                    = 26
	CellScriptLexerMOD                    = 27
	CellScriptLexerASSIGN                 = 28
	CellScriptLexerLITERAL                = 29
	CellScriptLexerNUMBER                 = 30
	CellScriptLexerSTRING_LIT             = 31
	CellScriptLexerBOOL_LIT               = 32
	CellScriptLexerRAW_STRING_LIT         = 33
	CellScriptLexerINTERPRETED_STRING_LIT = 34
	CellScriptLexerWS                     = 35
	CellScriptLexerCOMMENT                = 36
	CellScriptLexerTERMINATOR             = 37
	CellScriptLexerLINE_COMMENT           = 38
	CellScriptLexerWS_DEFAULT             = 39
	CellScriptLexerCOMMENT_DEFAULT        = 40
	CellScriptLexerLINE_COMMENT_DEFAULT   = 41
	CellScriptLexerEOS                    = 42
)
