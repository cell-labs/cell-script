package tx

const (
	SUCCESS = iota
)

const (
	SCRTPT_SIZE		   = 32768
	BLAKE2B_BLOCK_SIZE = 32
	BLAKE160_SIZE      = 160/8
)

const (
	CKB_CELL_FIELD_CAPACITY = iota
	CKB_CELL_FIELD_DATA_HASH
	CKB_CELL_FIELD_LOCK
	CKB_CELL_FIELD_LOCK_HASH
	CKB_CELL_FIELD_TYPE
	CKB_CELL_FIELD_TYPE_HASH
	CKB_CELL_FIELD_OCCUPIED_CAPACITY
)

const (
	CKB_SOURCE_INPUT = 1
    CKB_SOURCE_OUTPUT = 2
)
extern (
	func script_verify() bool
    func is_owner_mode() bool
    func get_utxo_inputs() []byte
    func get_utxo_outputs() []byte
)

func scriptVerify() bool {
	return script_verify()
}
func isOwnerMode() bool {
	return is_owner_mode()
}
func inputs() []byte {
	return get_utxo_inputs()
}
func outputs() []byte {
	return get_utxo_outputs()
}

extern (
	func checked_load_script() []byte
	func get_vec_size(args string) uint64
	func get_witness() string
	func get_blake2b(data string) string
	func execute_func(hash string, hashType uint8, funcName string, isOwnerMode bool, extensionIndex int64, args string) int64
    // func check_enhanced_owner_mode(args *cell.XudtArgs) bool
    // func simple_udt(owner_mode bool) int64
    // func execute_scripts(args *cell.XudtArgs) bool
)

func checkedLoadScript() []byte {
	return checked_load_script()
}

// dynamic vector has raw byte size in little-edian
func getVectorRawByteSize(args string) uint64 {
	return get_vec_size(args)
}
func getWitness() string {
	return get_witness()
}
func getBlake2b(data string) string {
	return get_blake2b(data)
}
func executeFunc(hash string, hashType uint8, funcName string, isOwnerMode bool, extensionIndex int64, args string) int64 {
	return execute_func(hash, hashType, funcName, isOwnerMode, extensionIndex, args)
}
